#!/bin/bash
#
# Ensimag - Projet système
# Copyright (C) 2012 - Damien Dejean <dam.dejean@gmail.com>
#
# Creates a map that contains with a C table that contains, for each
# userspace program, its name, the address of the beginning of the program in
# physical memory, and the its length.
#
# Usage:
# ./generate-symbol-table.sh <output-file> <list of userspace binaries>

function usage() {
    printf "Script usage:"
    echo -e "\tgenerate-symbols-table.sh <c-output-file> <list-of-binaries>"
    echo -e "\t\t<c-output-file>\t\tthe file where the C code will be generated."
    echo -e "\t\t<list-of-binaires>\tthe list of the userspace binaries. Must contain at least one element."
}

# Check parameters requirements
if [ $# -lt 2 ]; then
    echo "*** Error: more arguments are required."
    usage
    exit 1
fi

# Get output file name, if the file already exists, quit. The makefile must
# have been cleaned it before calling us.
OUTPUT=$1
if [ -e $OUTPUT ]; then
    echo "*** Error: output file '${OUTPUT}' already exists. Remove it before calling me."
    exit 1
fi
shift

# Get files list
FILE_LIST=$@

# Create a file header
cat << EOF > $OUTPUT
/*
 * Ensimag - Projet système
 * Copyright (C) 2012 - Damien Dejean <dam.dejean@gmail.com>
 *
 * NOTE: this file is automagically generated by the build toolchain,
 * any manual modification will be losted during next build.
 *
 * Provides a symbol table to locate userspace program inthe binary kernel
 * (ie: physical memory during run).
 */

#include "stddef.h"
#include "userspace_apps.h"

EOF

# Declare linker symbols
cat << EOF >> $OUTPUT
/*
 * Declare linker's symbols. For each user application we declare its
 * position in memory, the length of the binary, and the name of the
 * application.
 */

EOF

for FILE in $FILE_LIST; do

    FILE_BASE=`basename $FILE .bin`
    cat << EOF >> $OUTPUT
/* "${FILE_BASE}" symbols */
extern char _${FILE_BASE}_start[];
extern char _${FILE_BASE}_end[];

EOF

done

# Create the header of the table
cat << EOF >> $OUTPUT
const struct uapps symbols_table[] = {
EOF

for FILE in $FILE_LIST; do

    FILE_BASE=`basename $FILE .bin`
    echo -e "\t{\"${FILE_BASE}\", _${FILE_BASE}_start, _${FILE_BASE}_end}," >> $OUTPUT
done

# End of table and file
cat << EOF >> $OUTPUT
        {NULL, NULL, 0}
};

EOF

